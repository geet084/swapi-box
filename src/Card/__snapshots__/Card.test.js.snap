// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should properly render snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    choice="people"
    name="hello"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="fave-icon"
        >
          <i
            className="fas fa-jedi"
          />
        </span>,
        Array [
          "",
          <p>
            name
            : 
            hello
          </p>,
        ],
      ],
      "className": "card people-bg",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fas fa-jedi"
          />,
          "className": "fave-icon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-jedi",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "span",
      },
      "",
      Object {
        "instance": null,
        "key": "name",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "name",
            ": ",
            "hello",
          ],
        },
        "ref": null,
        "rendered": Array [
          "name",
          ": ",
          "hello",
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="fave-icon"
          >
            <i
              className="fas fa-jedi"
            />
          </span>,
          Array [
            "",
            <p>
              name
              : 
              hello
            </p>,
          ],
        ],
        "className": "card people-bg",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-jedi"
            />,
            "className": "fave-icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-jedi",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "span",
        },
        "",
        Object {
          "instance": null,
          "key": "name",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "name",
              ": ",
              "hello",
            ],
          },
          "ref": null,
          "rendered": Array [
            "name",
            ": ",
            "hello",
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Card should properly render snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    choice="planets"
    name="hello"
    residents={
      Array [
        "bob",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="fave-icon"
        >
          <i
            className="fas fa-jedi"
          />
        </span>,
        Array [
          "",
          <p>
            name
            : 
            hello
          </p>,
          Array [
            "residents: bob",
          ],
        ],
      ],
      "className": "card planets-bg",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fas fa-jedi"
          />,
          "className": "fave-icon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-jedi",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "span",
      },
      "",
      Object {
        "instance": null,
        "key": "name",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "name",
            ": ",
            "hello",
          ],
        },
        "ref": null,
        "rendered": Array [
          "name",
          ": ",
          "hello",
        ],
        "type": "p",
      },
      "residents: bob",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="fave-icon"
          >
            <i
              className="fas fa-jedi"
            />
          </span>,
          Array [
            "",
            <p>
              name
              : 
              hello
            </p>,
            Array [
              "residents: bob",
            ],
          ],
        ],
        "className": "card planets-bg",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-jedi"
            />,
            "className": "fave-icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-jedi",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "span",
        },
        "",
        Object {
          "instance": null,
          "key": "name",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "name",
              ": ",
              "hello",
            ],
          },
          "ref": null,
          "rendered": Array [
            "name",
            ": ",
            "hello",
          ],
          "type": "p",
        },
        "residents: bob",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Card should properly render snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    choice="vehicles"
    name="hello"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="fave-icon"
        >
          <i
            className="fas fa-jedi"
          />
        </span>,
        Array [
          "",
          <p>
            name
            : 
            hello
          </p>,
        ],
      ],
      "className": "card vehicles-bg",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fas fa-jedi"
          />,
          "className": "fave-icon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-jedi",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "span",
      },
      "",
      Object {
        "instance": null,
        "key": "name",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "name",
            ": ",
            "hello",
          ],
        },
        "ref": null,
        "rendered": Array [
          "name",
          ": ",
          "hello",
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="fave-icon"
          >
            <i
              className="fas fa-jedi"
            />
          </span>,
          Array [
            "",
            <p>
              name
              : 
              hello
            </p>,
          ],
        ],
        "className": "card vehicles-bg",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-jedi"
            />,
            "className": "fave-icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-jedi",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "span",
        },
        "",
        Object {
          "instance": null,
          "key": "name",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "name",
              ": ",
              "hello",
            ],
          },
          "ref": null,
          "rendered": Array [
            "name",
            ": ",
            "hello",
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
